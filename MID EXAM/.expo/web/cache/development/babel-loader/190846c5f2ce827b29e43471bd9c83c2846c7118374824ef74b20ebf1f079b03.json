{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CustomButton from \"./CustomButton\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    axios.get('https://fakestoreapi.com/products').then(function (response) {\n      console.log('response', response.data);\n      setData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  var loginBtnPressed = function loginBtnPressed() {\n    console.log('login btn pressed');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(FlatList, {\n      data: data,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [_jsx(View, {\n            style: {\n              flex: 0.5,\n              backgroundColor: 'lightgrey'\n            },\n            children: _jsxs(Text, {\n              children: [\" \", item.title, \" \"]\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 0.5,\n              backgroundColor: 'green'\n            },\n            children: _jsxs(Text, {\n              children: [\" \", item.category, \" \"]\n            })\n          }), _jsxs(Text, {\n            children: [\" \", item.category, \" \"]\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    marginTop: 100\n  }\n});","map":{"version":3,"names":["StatusBar","useEffect","useState","StyleSheet","Text","View","FlatList","SectionList","TouchableOpacity","CustomButton","axios","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","data","setData","get","then","response","console","log","catch","error","loginBtnPressed","style","styles","container","children","renderItem","_ref","item","flex","backgroundColor","title","category","keyExtractor","id","create","marginTop"],"sources":["C:/Users/LENOVO/Desktop/New folder/custombuttonandapi/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  SectionList,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\n\r\nimport CustomButton from './CustomButton';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default function App() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://fakestoreapi.com/products')\r\n      .then(function (response) {\r\n        console.log('response', response.data);\r\n        setData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const loginBtnPressed = () => {\r\n    console.log('login btn pressed');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Open up App.js to start working on your app!</Text>\r\n\r\n      {/* <CustomButton afzal='top' />\r\n      <CustomButton afzal='bottom' />\r\n      <CustomButton afzal='left' />\r\n      <CustomButton afzal='right' /> */}\r\n\r\n      <FlatList\r\n        data={data}\r\n        renderItem={({ item }) => (\r\n          <View style={{ flex: 1 }}>\r\n            <View style={{ flex: 0.5, backgroundColor: 'lightgrey' }}>\r\n              <Text> {item.title} </Text>\r\n            </View>\r\n            <View style={{ flex: 0.5, backgroundColor: 'green' }}>\r\n              <Text> {item.category} </Text>\r\n            </View>\r\n\r\n            <Text> {item.category} </Text>\r\n          </View>\r\n        )}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n\r\n      {/* <SectionList\r\n      sections={DATA}\r\n      keyExtractor={(item, index) => item + index}\r\n      renderItem={({item}) => (\r\n        <View style={{backgroundColor:'green'}}>\r\n          <Text style={styles.title}>{item}</Text>\r\n        </View>\r\n      )}\r\n      renderSectionHeader={({section: {title}}) => (\r\n        <View style={{backgroundColor:'lightgrey'}}>\r\n        <Text style={styles.header}>{title}</Text>\r\n        </View>\r\n      )}\r\n    /> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    // alignItems: 'center',\r\n    // justifyContent: 'center',\r\n    marginTop: 100,\r\n  },\r\n});\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,WAAA;AAAA,OAAAC,gBAAA;AAU5C,OAAOC,YAAY;AAEnB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwBd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBhB,SAAS,CAAC,YAAM;IACdS,KAAK,CACFW,GAAG,CAAC,mCAAmC,CAAC,CACxCC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACJ,IAAI,CAAC;MACtCC,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAAC;IACxB,CAAC,CAAC,CACDO,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC;EAED,OACEX,KAAA,CAACT,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpB,IAAA,CAACR,IAAI;MAAA4B,QAAA,EAAC;IAA4C,EAAO,EAOzDpB,IAAA,CAACN,QAAQ;MACPa,IAAI,EAAEA,IAAK;MACXc,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;QAAA,OACjBrB,KAAA,CAACT,IAAI;UAACwB,KAAK,EAAE;YAAEO,IAAI,EAAE;UAAE,CAAE;UAAAJ,QAAA,GACvBpB,IAAA,CAACP,IAAI;YAACwB,KAAK,EAAE;cAAEO,IAAI,EAAE,GAAG;cAAEC,eAAe,EAAE;YAAY,CAAE;YAAAL,QAAA,EACvDlB,KAAA,CAACV,IAAI;cAAA4B,QAAA,GAAC,GAAC,EAACG,IAAI,CAACG,KAAK,EAAC,GAAC;YAAA;UAAO,EACtB,EACP1B,IAAA,CAACP,IAAI;YAACwB,KAAK,EAAE;cAAEO,IAAI,EAAE,GAAG;cAAEC,eAAe,EAAE;YAAQ,CAAE;YAAAL,QAAA,EACnDlB,KAAA,CAACV,IAAI;cAAA4B,QAAA,GAAC,GAAC,EAACG,IAAI,CAACI,QAAQ,EAAC,GAAC;YAAA;UAAO,EACzB,EAEPzB,KAAA,CAACV,IAAI;YAAA4B,QAAA,GAAC,GAAC,EAACG,IAAI,CAACI,QAAQ,EAAC,GAAC;UAAA,EAAO;QAAA,EACzB;MAAA,CACP;MACFC,YAAY,EAAE,SAAAA,aAACL,IAAI;QAAA,OAAKA,IAAI,CAACM,EAAE;MAAA;IAAC,EAChC;EAAA,EAgBG;AAEX;AAEA,IAAMX,MAAM,GAAG3B,UAAU,CAACuC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IAGvBM,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}