{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function CustomButton(props) {\n  useEffect(function () {\n    console.log(props.afzal);\n  });\n  props.loginBtnPressed = function () {};\n  if (props.afzal == 'top') {\n    return _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: 'grey',\n          width: 100,\n          height: 30,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: loginBtnPressed,\n        children: _jsx(Text, {\n          children: \" Sign In \"\n        })\n      })\n    });\n  } else if (props.afzal == 'bottom') {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: 'green',\n          width: 100,\n          height: 30\n        },\n        onPress: loginBtnPressed,\n        children: _jsx(Text, {\n          children: \" Sign In \"\n        })\n      })\n    });\n  } else {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: 'yellow',\n          width: 100,\n          height: 30\n        },\n        onPress: loginBtnPressed,\n        children: _jsx(Text, {\n          children: \" Sign In \"\n        })\n      })\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","FlatList","SectionList","TouchableOpacity","useEffect","useState","jsx","_jsx","CustomButton","props","console","log","afzal","loginBtnPressed","children","style","backgroundColor","width","height","alignItems","justifyContent","onPress","styles","container","create","flex"],"sources":["C:/Users/LENOVO/Desktop/New folder/custombuttonandapi/CustomButton.jsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, FlatList, SectionList, TouchableOpacity } from 'react-native';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function CustomButton(props) {\r\n\r\nuseEffect(()=>{\r\n    console.log(props.afzal)\r\n    })\r\n  props.loginBtnPressed=()=>{\r\n\r\n  }\r\n\r\n  if(props.afzal=='top'){\r\n    return (\r\n        <View>\r\n          <TouchableOpacity style={{backgroundColor:'grey', width:100, height:30, alignItems:'center', justifyContent:'center'}} onPress={loginBtnPressed}>\r\n            <Text> Sign In </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n  }else  if(props.afzal=='bottom'){\r\n    return (\r\n        <View style={styles.container}>\r\n          <TouchableOpacity style={{backgroundColor:'green', width:100, height:30}} onPress={loginBtnPressed}>\r\n            <Text> Sign In </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n  }else{\r\n    return (\r\n        <View style={styles.container}>\r\n          <TouchableOpacity style={{backgroundColor:'yellow', width:100, height:30}} onPress={loginBtnPressed}>\r\n            <Text> Sign In </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n  }\r\n \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    // alignItems: 'center',\r\n    // justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,WAAA;AAAA,OAAAC,gBAAA;AAE5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5C,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAE5CL,SAAS,CAAC,YAAI;IACVM,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,KAAK,CAAC;EACxB,CAAC,CAAC;EACJH,KAAK,CAACI,eAAe,GAAC,YAAI,CAE1B,CAAC;EAED,IAAGJ,KAAK,CAACG,KAAK,IAAE,KAAK,EAAC;IACpB,OACIL,IAAA,CAACP,IAAI;MAAAc,QAAA,EACHP,IAAA,CAACJ,gBAAgB;QAACY,KAAK,EAAE;UAACC,eAAe,EAAC,MAAM;UAAEC,KAAK,EAAC,GAAG;UAAEC,MAAM,EAAC,EAAE;UAAEC,UAAU,EAAC,QAAQ;UAAEC,cAAc,EAAC;QAAQ,CAAE;QAACC,OAAO,EAAER,eAAgB;QAAAC,QAAA,EAC9IP,IAAA,CAACR,IAAI;UAAAe,QAAA,EAAC;QAAS;MAAO;IACL,EACd;EAEb,CAAC,MAAM,IAAGL,KAAK,CAACG,KAAK,IAAE,QAAQ,EAAC;IAC9B,OACIL,IAAA,CAACP,IAAI;MAACe,KAAK,EAAEO,MAAM,CAACC,SAAU;MAAAT,QAAA,EAC5BP,IAAA,CAACJ,gBAAgB;QAACY,KAAK,EAAE;UAACC,eAAe,EAAC,OAAO;UAAEC,KAAK,EAAC,GAAG;UAAEC,MAAM,EAAC;QAAE,CAAE;QAACG,OAAO,EAAER,eAAgB;QAAAC,QAAA,EACjGP,IAAA,CAACR,IAAI;UAAAe,QAAA,EAAC;QAAS;MAAO;IACL,EACd;EAEb,CAAC,MAAI;IACH,OACIP,IAAA,CAACP,IAAI;MAACe,KAAK,EAAEO,MAAM,CAACC,SAAU;MAAAT,QAAA,EAC5BP,IAAA,CAACJ,gBAAgB;QAACY,KAAK,EAAE;UAACC,eAAe,EAAC,QAAQ;UAAEC,KAAK,EAAC,GAAG;UAAEC,MAAM,EAAC;QAAE,CAAE;QAACG,OAAO,EAAER,eAAgB;QAAAC,QAAA,EAClGP,IAAA,CAACR,IAAI;UAAAe,QAAA,EAAC;QAAS;MAAO;IACL,EACd;EAEb;AAEF;AAEA,IAAMQ,MAAM,GAAGxB,UAAU,CAAC0B,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE,CAAC;IACPT,eAAe,EAAE;EAGnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}